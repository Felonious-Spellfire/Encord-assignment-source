<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="solution_intro">
    <title>Solution Intro</title>
    <body>
        <section id="section_egl_fn3_pyb">
            <title>Possible Recommendations</title>
            <p>Looking over the Encord docs I would make the following recommendations:</p>
            <ul id="ul_aw4_hn3_pyb">
                <li>
                    <p>The structure of the SDK help is a little confusing. The entries in
                        "Tutorials" are more like how-tos. I would expect tutorials to show some
                        real world data, not just some code with variables. I might consider a a
                        "levels" approach so the reader is introduced to topics as they "level
                        up".</p>
                </li>
                <li>
                    <p>End-to-end: A quick start for the product would be helpful and end-to-end
                        examples (of using critical features, each product, and using all three
                        products together) would really speed up how quickly your users are
                        successful. The existing end-to-end examples (from what I am looking at)
                        simply bring the code I need for multiple topics into one large topic. Good
                        tutorial and end-to-end examples include real world data, not just code with
                        variables.</p>
                </li>
                <li>
                    <p>Improved content navigation (Content reuse): There is information in the
                        Web-App content that would be useful in the API content. Supported file
                        considerations and upload specs would really help when creating a dataset.
                        Even basic things like the definitions of terms/features could be shared
                        (datasets for example appears in the "General Concepts" topic and then again
                        in the "Datasets topic.</p>
                </li>
                <li>
                    <p>Grammar and spell check the documents: The second link I clicked in the
                        assignment PDF had the following text in the live content: "If you just
                            <b>with</b> to upload your data from local storage to Encord,
                        CORD_STORAGE would be the appropriate choice." In the Introduction to Encord
                        topic in the Web-App help dataset is spelt "dataset", "data set", and
                        "Dataset" (as a proper noun). There are a number of tools that can do this
                        (Grammarly for grammar) though it might add some manual work to self reviews
                        or reviews in general.</p>
                </li>
                <li>
                    <p>Review of the tech specs: Uploading videos has differing max file sizes (2GB
                        in one place and 1GB or 500MB in another). This is critical information</p>
                </li>
                <li>
                    <p>Controlled English: Consider adopting a more ESL friendly way of writing.
                        Translation isn't usually done instantly, so your audience that are ESL will
                        have an easier time of reading the latest English content and native speaks
                        will appreciate the more direct writing. Though I do understand that more
                        conversational writing has been the trend for some time now. It's a style
                        choice, but one that shouldn't be taken lightly.</p>
                </li>
            </ul>
        </section>
        <section id="section_btt_2n3_pyb">
            <title>Author, Store, Publish</title>
            <p>There are many authoring, storage, and publishing solutions available. There is no
                one tool or tech stack that is perfect for every situation. It all comes down to
                what your requirements are for your documentation. I can go into a lot more detail
                on this with you if you like. For this assignment I went with DITA XML and GitHub
                for authoring and storage. I could have used RST or Markdoc, but do to time
                contstraints I went with a tool that lets me perform output generation on
                command.</p>
        </section>
    </body>
</topic>
